INFO: Seed: 3478445795
INFO: Loaded 1 modules   (2 inline 8-bit counters): 2 [0x5abed0, 0x5abed2), 
INFO: Loaded 1 PC tables (2 PCs): 2 [0x56f840,0x56f860), 
INFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes
INFO: A corpus is not provided, starting from an empty corpus
#2	INITED cov: 2 ft: 3 corp: 1/1b exec/s: 0 rss: 30Mb

=================================================================
==9464==ERROR: LeakSanitizer: detected memory leaks

Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x52234d in malloc (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x52234d)
    #1 0x554921 in leak(unsigned char const*, unsigned long) /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:8:26
    #2 0x5549a4 in LLVMFuzzerTestOneInput /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:15:5
    #3 0x45b691 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45b691)
    #4 0x45add5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45add5)
    #5 0x45ccea in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45ccea)
    #6 0x45cf79 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45cf79)
    #7 0x44cc85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x44cc85)
    #8 0x4748d2 in main (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x4748d2)
    #9 0x7f601c407d09 in __libc_start_main csu/../csu/libc-start.c:308:16

Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x52234d in malloc (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x52234d)
    #1 0x554921 in leak(unsigned char const*, unsigned long) /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:8:26
    #2 0x5549a4 in LLVMFuzzerTestOneInput /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:15:5
    #3 0x45b691 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45b691)
    #4 0x45add5 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool*) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45add5)
    #5 0x45c800 in fuzzer::Fuzzer::MutateAndTestOne() (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45c800)
    #6 0x45d275 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45d275)
    #7 0x44cc85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x44cc85)
    #8 0x4748d2 in main (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x4748d2)
    #9 0x7f601c407d09 in __libc_start_main csu/../csu/libc-start.c:308:16

Direct leak of 32 byte(s) in 1 object(s) allocated from:
    #0 0x52234d in malloc (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x52234d)
    #1 0x554921 in leak(unsigned char const*, unsigned long) /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:8:26
    #2 0x5549a4 in LLVMFuzzerTestOneInput /mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak.cpp:15:5
    #3 0x45b691 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45b691)
    #4 0x45cb06 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45cb06)
    #5 0x45cf79 in fuzzer::Fuzzer::Loop(std::__Fuzzer::vector<fuzzer::SizedFile, fuzzer::fuzzer_allocator<fuzzer::SizedFile> >&) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x45cf79)
    #6 0x44cc85 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x44cc85)
    #7 0x4748d2 in main (/mnt/hgfs/f/DSEC/fuzzer/memory_leak/leak+0x4748d2)
    #8 0x7f601c407d09 in __libc_start_main csu/../csu/libc-start.c:308:16

SUMMARY: AddressSanitizer: 96 byte(s) leaked in 3 allocation(s).
INFO: to ignore leaks on libFuzzer side use -detect_leaks=0.

MS: 1 ShuffleBytes-; base unit: adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
0xa,
\x0a
artifact_prefix='./'; Test unit written to ./leak-adc83b19e793491b1c6ea0fd8b46cd9f32e592fc
Base64: Cg==
